{"version":3,"sources":["components/upcoming.js","components/today.js","components/mainToDos.js","App.js","serviceWorker.js","index.js"],"names":["Upcoming","react_default","a","createElement","Fragment","this","props","list","map","el","className","key","id","Timer_default","name","place","date","Component","Today","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","console","log","ToDoMain","state","tasks","isOn","activeKey","doneList","showActive","btnText","upcoming","showToday","showUpcoming","listTitle","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","slice","todayList","concat","toConsumableArray","objectSpread","length","upcomingList","task","handleSwitch","prev","handleToday","handleUpcoming","handleDone","filter","elem","newTasks","i","handleDelete","handleDeleteDone","titleChecker","handleEnter","handleLeave","_this2","onSubmit","onChange","type","autoComplete","required","onSelect","onMouseEnter","onMouseLeave","RadioButtonUnchecked_default","style","display","DeleteForever_default","onClick","Done_default","RadioButtonChecked_default","components_upcoming","components_today","href","App","mainToDos","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01f6769c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Timer from '@material-ui/icons/Timer';\n\n\n\nclass Upcoming extends Component {\n    render() {\n        return (\n            <>\n                {this.props.list.map(el=>{\n                    return <li className='upcoming-list' key={el.id}>\n                        <Timer className='icon-un'/>\n                        <div>\n                            <p>{el.name}</p>\n                            <p>{el.place}</p>\n                        </div>\n                        <p>{el.date}</p>\n\n                    </li>\n                })}\n\n            </>\n        );\n    }\n\n}\n\nexport default Upcoming;\n","import React, {Component} from 'react';\nimport Timer from '@material-ui/icons/Timer';\n\n\n\nclass Today extends Component {\n    render() {\n        return (\n            <>\n                {this.props.list.map(el=>{\n                   return <li className='today-list' key={el.id}>\n                        <Timer className='icon-un'/>\n                        <div>\n                            <p>{el.name}</p>\n                            <p>{el.place}</p>\n                        </div>\n                        <p>{el.date}</p>\n                    </li>\n                })}\n\n            </>\n        );\n    }\n\n}\n\nexport default Today;\n","import React, {Component} from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport DoneIcon from '@material-ui/icons/Done';\nimport RadioUn from '@material-ui/icons/RadioButtonUnchecked';\nimport RadioChe from '@material-ui/icons/RadioButtonChecked';\n\nimport Upcoming from './upcoming'\nimport Today from './today'\n\nlet today = new Date();\nlet dd = String(today.getDate()).padStart(2, '0');\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\nlet yyyy = String(today.getFullYear());\nconsole.log(dd);\nconsole.log(mm);\nconsole.log(yyyy);\n\n// const style = {\n//     position: 'absolute',\n//     maxWidth: '500px',\n//     margin: '0',\n//     top: '50%',\n//     marginTop: '-250px',\n//     left: '50%',\n//     marginLeft: '-250px'\n// };\n\nclass ToDoMain extends Component {\n\n    state = {\n        name: '',\n        place: '',\n        date: '',\n        tasks: [],\n        isOn: false,\n        activeKey: '',\n        doneList: [],\n        showActive: true,\n        btnText: 'Completed',\n        today: [],\n        upcoming: [],\n        showToday: false,\n        showUpcoming: false,\n        listTitle:'Active'\n\n    };\n// Obsluga forma\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n\n        });\n        console.log(this.state.today);\n        console.log(this.state.upcoming);\n    };\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.date.slice(0, 4) === yyyy && this.state.date.slice(5, 7) === mm && this.state.date.slice(8, 10) === dd) {\n            let today = {\n                name: this.state.name,\n                place: this.state.place,\n                date: this.state.date\n            };\n            const todayList = [...this.state.today, {...today, id: this.state.today.length + 1}];\n\n            this.setState({\n                today: todayList\n            });\n\n        } else {\n            let upcoming = {\n                name: this.state.name,\n                place: this.state.place,\n                date: this.state.date\n            };\n            const upcomingList = [...this.state.upcoming, {...upcoming, id: this.state.upcoming.length + 1}];\n\n            this.setState({\n                upcoming: upcomingList\n            });\n\n        }\n\n        let task = {\n            name: this.state.name,\n            place: this.state.place,\n            date: this.state.date\n        };\n\n        const list = [...this.state.tasks, {...task, id: this.state.tasks.length + 1}];\n\n        this.setState({\n            tasks: list,\n            name: '',\n            place: '',\n            date: ''\n        });\n\n\n    };\n\n    //Zmiana z Active do Done\n\n    handleSwitch = (e) => {\n\n        this.setState(prev => ({\n            showToday: false,\n            showUpcoming: false,\n            showActive: !prev.showActive,\n            btnText: this.state.showActive ? 'Active tasks' : \"Completed\"\n        }));\n    };\n\n    //ZMIANA today upcoming\n\n    handleToday = e => {\n\n        this.setState(prev => ({\n            showToday: true,\n            showUpcoming: false\n\n        }))\n\n    };\n\n    handleUpcoming = e => {\n\n        this.setState(prev => ({\n            showToday: false,\n            showUpcoming: true\n        }))\n\n    };\n\n\n    /// Dodanie tasku do done\n    handleDone = (e, id,name) => {\n        const today=this.state.today.filter(el => el.name !== name);\n        const upcoming=this.state.upcoming.filter(el => el.name !== name);\n\n        const elem = this.state.tasks.filter(el => el.id === id);\n\n\n        const newTasks = this.state.tasks.filter(el => el.id !== id);\n\n        const list = [...this.state.doneList, ...elem];\n\n        this.setState({\n            doneList: list.map((el, i) => {\n                el.id = i;\n                return el\n            }),\n            tasks: newTasks.map((el, i) => {\n\n                el.id = i;\n                return el\n            }),\n            today:today.map((el, i) => {\n\n                el.id = i;\n                return el\n            }),\n            upcoming:upcoming.map((el, i) => {\n\n                el.id = i;\n                return el\n            })\n\n        });\n\n\n    };\n\n\n    //Usuwanie taska\n    handleDelete = (e, id,name) => {\n\n        const today=this.state.today.filter(el => el.name !== name);\n        const upcoming=this.state.upcoming.filter(el => el.name !== name);\n\n        const list = this.state.tasks.filter(el => el.id !== id);\n\n        this.setState({\n            tasks: list.map((el, i) => {\n\n                el.id = i;\n                return el\n            }),\n            today:today.map((el, i) => {\n\n                el.id = i;\n                return el\n            }),\n            upcoming:upcoming.map((el, i) => {\n\n                el.id = i;\n                return el\n            })\n        })\n\n    };\n\n    handleDeleteDone = (e, id,name) => {\n        const today=this.state.today.filter(el => el.name !== name);\n        const upcoming=this.state.upcoming.filter(el => el.name !== name);\n\n        const list = this.state.doneList.filter(el => el.id !== id);\n\n        this.setState({\n            doneList: list.map((el, i) => {\n\n                el.id = i;\n                return el\n            }),\n            today:today.map((el, i) => {\n\n                el.id = i;\n                return el\n            }),\n            upcoming:upcoming.map((el, i) => {\n\n                el.id = i;\n                return el\n            })\n        })\n\n    };\n\n    titleChecker = () =>{\n        let text='';\n        if(this.state.showActive=== true && this.state.showUpcoming === false && this.state.showToday === false){\n            text = 'Active'\n        } else if (this.state.showActive=== false && this.state.showUpcoming === false && this.state.showToday === false){\n            text = 'Completed'\n\n        } else if (this.state.showToday === true){\n            text = 'Today'\n        } else {\n            text = 'Upcoming'\n        }\n\n        return text\n\n    };\n\n    /// Hoever na element listy\n    handleEnter = (e, id) => {\n        this.setState({\n            activeKey: id,\n            isOn: true\n        })\n    };\n\n    handleLeave = (e, id) => {\n        this.setState({\n            isOn: false\n        })\n    };\n\n    render() {\n        return (\n            <>\n                <form onSubmit={this.handleSubmit}\n                      // style={this.state.tasks.length <= 0 && this.state.doneList.length <= 0 ? style : null}\n                className={this.state.tasks.length <= 0 && this.state.doneList.length <= 0 ?'mobile':''}\n                >\n                    <h1><p>lets plan something</p></h1>\n                    <div className='to-do-input'>\n                        <input onChange={this.handleChange} name='name' type=\"text\" autoComplete=\"off\" required\n                               value={this.state.name}/>\n                        <label>What i have to do?</label>\n                    </div>\n                    <div className='to-do-input'>\n                        <input onChange={this.handleChange} name='place' type=\"text\" autoComplete=\"off\" required\n                               value={this.state.place}/>\n                        <label>Where?</label>\n                    </div>\n                    <div className=\"to-do-input\">\n                        <input id=\"datetimepicker\" onSelect={this.handleChange} name='date' type=\"text\"\n                               value={this.state.date} autoComplete=\"off\" required/>\n                        <label>When?</label>\n                    </div>\n                    <br/>\n                    <button type='submit'>ADD TASK</button>\n                </form>\n                <ul className='task-list'>\n                    {this.state.tasks.length <= 0 && this.state.doneList.length <= 0?null:<p className='list-title'>\n                        {this.titleChecker()}\n\n                    </p>}\n                    {this.state.showActive ? this.state.tasks.map(el => {\n                        if (this.state.showToday === true || this.state.showUpcoming === true) {\n                            return null\n                        }\n                        return <li onMouseEnter={e => this.handleEnter(e, el.id)} onMouseLeave={this.handleLeave}\n                                   key={el.id}>\n                            <RadioUn className='icon-un'/>\n                            <div>\n                                <p>{el.name}</p>\n                                <p>{el.place}</p>\n                            </div>\n                            <p style={{display: (this.state.isOn && el.id === this.state.activeKey) ? 'none' : 'block'}}>{el.date}</p>\n                            <DeleteForeverIcon\n                                onClick={e => this.handleDelete(e, el.id,el.name)}\n                                style={{display: (this.state.isOn && el.id === this.state.activeKey) ? 'block' : 'none'}}\n                                className={'delete-icon'}/>\n                            <DoneIcon\n                                style={{display: (this.state.isOn && el.id === this.state.activeKey) ? 'block' : 'none'}}\n                                className={'done-icon'}\n                                onClick={e => this.handleDone(e, el.id,el.name)}/>\n                        </li>\n                    }) : this.state.doneList.map(el => {\n                        if (this.state.showToday === true || this.state.showUpcoming === true) {\n                            return null\n                        }\n                        return (\n                            <li onMouseEnter={e => this.handleEnter(e, el.id)} onMouseLeave={this.handleLeave} className='done-list-el' key={el.id}>\n                                <RadioChe className='icon-un'/>\n                                <div>\n                                    <p>{el.name}</p>\n                                    <p>{el.place}</p>\n                                </div>\n                                <p style={{display: (this.state.isOn && el.id === this.state.activeKey) ? 'none' : 'block'}}>{el.date}</p>\n                                <DeleteForeverIcon\n                                    onClick={e => this.handleDeleteDone(e, el.id,el.name)}\n                                    style={{display: (this.state.isOn && el.id === this.state.activeKey) ? 'block' : 'none'}}\n                                    className={'delete-icon'}/>\n                            </li>\n                        )\n                    })}\n                    {this.state.showUpcoming ? <Upcoming list={this.state.upcoming}/> : null}\n                    {this.state.showToday ? <Today list={this.state.today}/> : null}\n\n                </ul>\n\n                <div\n                    style={{display: this.state.tasks.length <= 0 && this.state.doneList.length <= 0 ? 'none' : 'block'}}\n                    className=\"inner\">\n                    <div className=\"activity\">\n                        <a onClick={this.handleSwitch} href=\"#\">{this.state.btnText}\n                            <p className='counter'>{!this.state.showActive?this.state.tasks.length:this.state.doneList.length}</p>\n                        </a>\n                        <a onClick={this.handleToday} href=\"#\">Today\n                            <p className='counter'>{this.state.today.length}</p>\n                        </a>\n                        <a onClick={this.handleUpcoming} href=\"#\">Upcoming\n                            <p className='counter'>{this.state.upcoming.length}</p>\n                        </a>\n                    </div>\n                </div>\n\n            </>\n\n\n        )\n    }\n}\n\nexport default ToDoMain;","import React, {Component} from 'react';\nimport './App.css';\nimport \"./styles.scss\";\nimport ToDoMain from './components/mainToDos';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <>\n                <div className='container'>\n                    <ToDoMain/>\n                </div>\n\n            </>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}